{"ast":null,"code":"var _jsxFileName = \"/home/ricardo/bankpague/front/src/pages/List/index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // regular fetch with axios\n\nfunction App() {\n  const [isLoading, setLoading] = useState(false);\n  const [isError, setError] = useState(false);\n  const [data, setData] = useState({});\n  useEffect(() => {\n    const fetchData = async () => {\n      setError(false);\n      setLoading(true);\n\n      try {\n        const response = await axios('http://swapi.dev/api/people/1/');\n        setData(response.data);\n      } catch (error) {\n        setError(true);\n      }\n\n      setLoading(false);\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"React Query example with Star Wars API\"), isError && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 19\n    }\n  }, \"Something went wrong ...\"), isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Loading ...\") : /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, JSON.stringify(data, null, 2)));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ricardo/bankpague/front/src/pages/List/index.tsx"],"names":["React","useState","useEffect","axios","App","isLoading","setLoading","isError","setError","data","setData","fetchData","response","error","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACM,OAAD,EAAUC,QAAV,IAAsBP,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,SAAS,GAAG,YAAY;AAC5BH,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACAF,MAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,UAAI;AACF,cAAMM,QAAQ,GAAG,MAAMT,KAAK,CAAC,gCAAD,CAA5B;AAEAO,QAAAA,OAAO,CAACE,QAAQ,CAACH,IAAV,CAAP;AACD,OAJD,CAIE,OAAOI,KAAP,EAAc;AACdL,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;;AACDF,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAZD;;AAaAK,IAAAA,SAAS;AACV,GAfQ,EAeN,EAfM,CAAT;AAgBF,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADF,EAEGJ,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFd,EAIGF,SAAS,gBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADQ,gBAGR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMS,IAAI,CAACC,SAAL,CAAeN,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAAN,CAPJ,CADJ;AAaC;;AACD,eAAeL,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n// regular fetch with axios\nfunction App() {\n  const [isLoading, setLoading] = useState(false)\n  const [isError, setError] = useState(false)\n  const [data, setData] = useState({});\n \n  useEffect(() => {\n    const fetchData = async () => {\n      setError(false);\n      setLoading(true);\n  \n      try {\n        const response = await axios('http://swapi.dev/api/people/1/');\n  \n        setData(response.data);\n      } catch (error) {\n        setError(true);\n      }\n      setLoading(false);\n    };\n    fetchData()\n  }, []);\nreturn (\n    <div className=\"App\">\n      <h1>React Query example with Star Wars API</h1>\n      {isError && <div>Something went wrong ...</div>}\n \n      {isLoading ? (\n        <div>Loading ...</div>\n      ) : (\n        <pre>{JSON.stringify(data, null, 2)}\n        </pre>\n      )}\n    </div>\n  );\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}