{"ast":null,"code":"var _jsxFileName = \"/home/ricardo/bankpague/front/src/pages/List/index.tsx\";\nimport React from 'react';\nimport useSWR from 'swr';\n\nconst fetcher = (...args) => fetch(...args).then(res => res.json());\n\nfunction UserList() {\n  const {\n    data,\n    error\n  } = useSWR('/api/user/123', fetcher);\n  if (error) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }\n  }, \"failed to load\");\n  if (!data) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }\n  }, \"loading...\"); // render data\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 10\n    }\n  }, \"hello \", data.name, \"!\");\n}\n\nexport default UserList;","map":{"version":3,"sources":["/home/ricardo/bankpague/front/src/pages/List/index.tsx"],"names":["React","useSWR","fetcher","args","fetch","then","res","json","UserList","data","error","name"],"mappings":";AAAA,OAAOA,KAAP,MAAmC,OAAnC;AAKA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,MAAMC,OAAO,GAAG,CAAC,GAAGC,IAAJ,KAAaC,KAAK,CAAC,GAAGD,IAAJ,CAAL,CAAeE,IAAf,CAAoBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA3B,CAA7B;;AAEA,SAASC,QAAT,GAAqB;AACnB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBT,MAAM,CAAC,eAAD,EAAkBC,OAAlB,CAA9B;AACA,MAAIQ,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACX,MAAI,CAACD,IAAL,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP,CAHQ,CAInB;;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAYA,IAAI,CAACE,IAAjB,MAAP;AACD;;AAED,eAAeH,QAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { mutate as mutateGlobal } from 'swr';\nimport { useFetch } from '~/hooks/useFetch';\nimport api from '~/services/api';\nimport useSWR from 'swr'\n\nconst fetcher = (...args) => fetch(...args).then(res => res.json())\n\nfunction UserList () {\n  const { data, error } = useSWR('/api/user/123', fetcher)\n  if (error) return <div>failed to load</div>\n  if (!data) return <div>loading...</div>\n  // render data\n  return <div>hello {data.name}!</div>\n}\n  \nexport default UserList;"]},"metadata":{},"sourceType":"module"}