{"ast":null,"code":"var _jsxFileName = \"/home/ricardo/bankpague/front/src/pages/List/index.tsx\";\nimport React from 'react';\nimport axios from 'axios'; //\n\nimport { useQuery, useQueryCache, useMutation, QueryCache, ReactQueryCacheProvider } from 'react-query';\nimport { ReactQueryDevtools } from 'react-query-devtools';\nconst queryCache = new QueryCache();\nexport default function App() {\n  return /*#__PURE__*/React.createElement(ReactQueryCacheProvider, {\n    queryCache: queryCache,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Example, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction Example() {\n  const cache = useQueryCache();\n  const [intervalMs, setIntervalMs] = React.useState(1000);\n  const [value, setValue] = React.useState('');\n  const {\n    status,\n    data,\n    error,\n    isFetching\n  } = useQuery('todos', async () => {\n    const {\n      data\n    } = await axios.get('/api/data');\n    return data;\n  }, {\n    // Refetch the data every second\n    refetchInterval: intervalMs\n  });\n  const [mutateAddTodo] = useMutation(value => fetch(`/api/data?add=${value}`), {\n    onSuccess: () => cache.invalidateQueries('todos')\n  });\n  const [mutateClear] = useMutation(value => fetch(`/api/data?clear=1`), {\n    onSuccess: () => cache.invalidateQueries('todos')\n  });\n  if (status === 'loading') return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 36\n    }\n  }, \"Loading...\");\n  if (status === 'error') return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 34\n    }\n  }, \"Error: \", error.message);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"Auto Refetch with stale-time set to 1s)\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"This example is best experienced on your own machine, where you can open multiple tabs to the same localhost server and see your changes propagate between the two.\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Query Interval speed (ms):\", ' ', /*#__PURE__*/React.createElement(\"input\", {\n    value: intervalMs,\n    onChange: ev => setIntervalMs(Number(ev.target.value)),\n    type: \"number\",\n    step: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), ' ', /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'inline-block',\n      marginLeft: '.5rem',\n      width: 10,\n      height: 10,\n      background: isFetching ? 'green' : 'transparent',\n      transition: !isFetching ? 'all .3s ease' : 'none',\n      borderRadius: '100%',\n      transform: 'scale(2)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, \"Todo List\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: async ev => {\n      ev.preventDefault();\n\n      try {\n        await mutateAddTodo(value);\n        setValue('');\n      } catch {}\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"enter something\",\n    value: value,\n    onChange: ev => setValue(ev.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, data.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, item))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: mutateClear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, \"Clear All\")), /*#__PURE__*/React.createElement(ReactQueryDevtools, {\n    initialIsOpen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/ricardo/bankpague/front/src/pages/List/index.tsx"],"names":["React","axios","useQuery","useQueryCache","useMutation","QueryCache","ReactQueryCacheProvider","ReactQueryDevtools","queryCache","App","Example","cache","intervalMs","setIntervalMs","useState","value","setValue","status","data","error","isFetching","get","refetchInterval","mutateAddTodo","fetch","onSuccess","invalidateQueries","mutateClear","message","ev","Number","target","display","marginLeft","width","height","background","transition","borderRadius","transform","preventDefault","map","item"],"mappings":"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","sourcesContent":["import React from 'react'\nimport axios from 'axios'\n\n//\n\nimport {\n  useQuery,\n  useQueryCache,\n  useMutation,\n  QueryCache,\n  ReactQueryCacheProvider,\n} from 'react-query'\nimport { ReactQueryDevtools } from 'react-query-devtools'\n\nconst queryCache = new QueryCache()\n\nexport default function App() {\n  return (\n    <ReactQueryCacheProvider queryCache={queryCache}>\n      <Example />\n    </ReactQueryCacheProvider>\n  )\n}\n\nfunction Example() {\n  const cache = useQueryCache()\n  const [intervalMs, setIntervalMs] = React.useState(1000)\n  const [value, setValue] = React.useState('')\n\n  const { status, data, error, isFetching } = useQuery(\n    'todos',\n    async () => {\n      const { data } = await axios.get('/api/data')\n      return data\n    },\n    {\n      // Refetch the data every second\n      refetchInterval: intervalMs,\n    }\n  )\n\n  const [mutateAddTodo] = useMutation(\n    value => fetch(`/api/data?add=${value}`),\n    {\n      onSuccess: () => cache.invalidateQueries('todos'),\n    }\n  )\n\n  const [mutateClear] = useMutation(value => fetch(`/api/data?clear=1`), {\n    onSuccess: () => cache.invalidateQueries('todos'),\n  })\n\n  if (status === 'loading') return <h1>Loading...</h1>\n  if (status === 'error') return <span>Error: {error.message}</span>\n\n  return (\n    <div>\n      <h1>Auto Refetch with stale-time set to 1s)</h1>\n      <p>\n        This example is best experienced on your own machine, where you can open\n        multiple tabs to the same localhost server and see your changes\n        propagate between the two.\n      </p>\n      <label>\n        Query Interval speed (ms):{' '}\n        <input\n          value={intervalMs}\n          onChange={ev => setIntervalMs(Number(ev.target.value))}\n          type=\"number\"\n          step=\"100\"\n        />{' '}\n        <span\n          style={{\n            display: 'inline-block',\n            marginLeft: '.5rem',\n            width: 10,\n            height: 10,\n            background: isFetching ? 'green' : 'transparent',\n            transition: !isFetching ? 'all .3s ease' : 'none',\n            borderRadius: '100%',\n            transform: 'scale(2)',\n          }}\n        />\n      </label>\n      <h2>Todo List</h2>\n      <form\n        onSubmit={async ev => {\n          ev.preventDefault()\n          try {\n            await mutateAddTodo(value)\n            setValue('')\n          } catch {}\n        }}\n      >\n        <input\n          placeholder=\"enter something\"\n          value={value}\n          onChange={ev => setValue(ev.target.value)}\n        />\n      </form>\n      <ul>\n        {data.map(item => (\n          <li key={item}>{item}</li>\n        ))}\n      </ul>\n      <div>\n        <button onClick={mutateClear}>Clear All</button>\n      </div>\n      <ReactQueryDevtools initialIsOpen />\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}