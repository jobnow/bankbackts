{"ast":null,"code":"var _jsxFileName = \"/home/ricardo/bankpague/go-barber-web-ts/src/components/ToastContainer/Toast/index.tsx\";\nimport React, { useEffect } from 'react';\nimport { FiAlertCircle, FiCheckCircle, FiInfo, FiXCircle } from 'react-icons/fi';\nimport { useToast } from \"../../../hooks/ToastContext\";\nimport { Container } from './styles';\nconst icons = {\n  info: /*#__PURE__*/React.createElement(FiInfo, {\n    size: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }),\n  error: /*#__PURE__*/React.createElement(FiAlertCircle, {\n    size: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 10\n    }\n  }),\n  success: /*#__PURE__*/React.createElement(FiCheckCircle, {\n    size: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }\n  })\n};\n\nconst Toast = ({\n  toast,\n  style\n}) => {\n  const {\n    removeToast\n  } = useToast();\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      removeToast(toast.id);\n    }, 3000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [removeToast, toast.id]);\n  return /*#__PURE__*/React.createElement(Container, {\n    type: toast.type,\n    hasDescription: Number(!!toast.description),\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, icons[toast.type || 'info'], /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, toast.title), toast.description && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 31\n    }\n  }, toast.description)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => removeToast(toast.id),\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FiXCircle, {\n    size: 18,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Toast;","map":{"version":3,"sources":["/home/ricardo/bankpague/go-barber-web-ts/src/components/ToastContainer/Toast/index.tsx"],"names":["React","useEffect","FiAlertCircle","FiCheckCircle","FiInfo","FiXCircle","useToast","Container","icons","info","error","success","Toast","toast","style","removeToast","timer","setTimeout","id","clearTimeout","type","Number","description","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,aADF,EAEEC,aAFF,EAGEC,MAHF,EAIEC,SAJF,QAKO,gBALP;AAOA,SAASC,QAAT,QAAyB,6BAAzB;AAIA,SAASC,SAAT,QAA0B,UAA1B;AAEA,MAAMC,KAAK,GAAG;AACZC,EAAAA,IAAI,eAAE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM;AAEZC,EAAAA,KAAK,eAAE,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAE,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFK;AAGZC,EAAAA,OAAO,eAAE,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAE,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHG,CAAd;;AAMA,MAAMC,KAA4B,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAsB;AACzD,QAAM;AAAEC,IAAAA;AAAF,MAAkBT,QAAQ,EAAhC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC7BF,MAAAA,WAAW,CAACF,KAAK,CAACK,EAAP,CAAX;AACD,KAFuB,EAErB,IAFqB,CAAxB;AAIA,WAAO,MAAM;AACXC,MAAAA,YAAY,CAACH,KAAD,CAAZ;AACD,KAFD;AAGD,GARQ,EAQN,CAACD,WAAD,EAAcF,KAAK,CAACK,EAApB,CARM,CAAT;AAUA,sBACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAEL,KAAK,CAACO,IADd;AAEE,IAAA,cAAc,EAAEC,MAAM,CAAC,CAAC,CAACR,KAAK,CAACS,WAAT,CAFxB;AAGE,IAAA,KAAK,EAAER,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGN,KAAK,CAACK,KAAK,CAACO,IAAN,IAAc,MAAf,CALR,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASP,KAAK,CAACU,KAAf,CADF,EAEGV,KAAK,CAACS,WAAN,iBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIT,KAAK,CAACS,WAAV,CAFxB,CAPF,eAYE;AAAQ,IAAA,OAAO,EAAE,MAAMP,WAAW,CAACF,KAAK,CAACK,EAAP,CAAlC;AAA8C,IAAA,IAAI,EAAC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAE,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAZF,CADF;AAkBD,CA/BD;;AAiCA,eAAeN,KAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport {\n  FiAlertCircle,\n  FiCheckCircle,\n  FiInfo,\n  FiXCircle,\n} from 'react-icons/fi';\n\nimport { useToast } from '~/hooks/ToastContext';\n\nimport IToastProps from '../interfaces/IToastProps';\n\nimport { Container } from './styles';\n\nconst icons = {\n  info: <FiInfo size={24} />,\n  error: <FiAlertCircle size={24} />,\n  success: <FiCheckCircle size={24} />,\n};\n\nconst Toast: React.FC<IToastProps> = ({ toast, style }) => {\n  const { removeToast } = useToast();\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      removeToast(toast.id);\n    }, 3000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [removeToast, toast.id]);\n\n  return (\n    <Container\n      type={toast.type}\n      hasDescription={Number(!!toast.description)}\n      style={style}\n    >\n      {icons[toast.type || 'info']}\n\n      <div>\n        <strong>{toast.title}</strong>\n        {toast.description && <p>{toast.description}</p>}\n      </div>\n\n      <button onClick={() => removeToast(toast.id)} type=\"button\">\n        <FiXCircle size={18} />\n      </button>\n    </Container>\n  );\n};\n\nexport default Toast;\n"]},"metadata":{},"sourceType":"module"}