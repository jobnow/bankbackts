{"ast":null,"code":"var _jsxFileName = \"/home/ricardo/bankpague/front/src/pages/List/index.tsx\";\nimport React, { useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { mutate as mutateGlobal } from 'swr';\nimport { useFetch } from \"../../hooks/useFetch\";\nimport api from \"../../services/api\";\n\nconst List = () => {\n  const {\n    data,\n    mutate\n  } = useFetch('users');\n  const handleNameChange = useCallback(id => {\n    api.put(`users/${id}`, fetcher, {\n      refreshWhenHidden: 10\n    });\n    const updatedUsers = data === null || data === void 0 ? void 0 : data.map(user => {\n      if (user.id === id) {\n        return { ...user,\n          name: 'Bartolomeu'\n        };\n      }\n\n      return user;\n    });\n    mutate(updatedUsers, false);\n    mutateGlobal(`users/${id}`, {\n      id,\n      name: 'Bartolomeu'\n    });\n  }, [data, mutate]);\n\n  if (!data) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 12\n      }\n    }, \"Carregando...\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, data.map(user => /*#__PURE__*/React.createElement(\"li\", {\n    key: user.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/users/${user.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, user.name), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => handleNameChange(user.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"Alterar nome\"))));\n};\n\nexport default List;","map":{"version":3,"sources":["/home/ricardo/bankpague/front/src/pages/List/index.tsx"],"names":["React","useCallback","Link","mutate","mutateGlobal","useFetch","api","List","data","handleNameChange","id","put","fetcher","refreshWhenHidden","updatedUsers","map","user","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,MAAM,IAAIC,YAAnB,QAAuC,KAAvC;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;;AAOA,MAAMC,IAAc,GAAG,MAAM;AAC3B,QAAM;AAAEC,IAAAA,IAAF;AAAQL,IAAAA;AAAR,MAAmBE,QAAQ,CAAS,OAAT,CAAjC;AAEA,QAAMI,gBAAgB,GAAGR,WAAW,CAAES,EAAD,IAAgB;AACnDJ,IAAAA,GAAG,CAACK,GAAJ,CAAS,SAAQD,EAAG,EAApB,EAAuBE,OAAvB,EAAgC;AAAEC,MAAAA,iBAAiB,EAAE;AAArB,KAAhC;AAEA,UAAMC,YAAY,GAAGN,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEO,GAAN,CAAUC,IAAI,IAAI;AACrC,UAAIA,IAAI,CAACN,EAAL,KAAYA,EAAhB,EAAoB;AAClB,eAAO,EAAE,GAAGM,IAAL;AAAWC,UAAAA,IAAI,EAAE;AAAjB,SAAP;AACD;;AAED,aAAOD,IAAP;AACD,KANoB,CAArB;AAQAb,IAAAA,MAAM,CAACW,YAAD,EAAe,KAAf,CAAN;AACAV,IAAAA,YAAY,CAAE,SAAQM,EAAG,EAAb,EAAgB;AAAEA,MAAAA,EAAF;AAAMO,MAAAA,IAAI,EAAE;AAAZ,KAAhB,CAAZ;AACD,GAbmC,EAajC,CAACT,IAAD,EAAOL,MAAP,CAbiC,CAApC;;AAeA,MAAI,CAACK,IAAL,EAAW;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IAAI,CAACO,GAAL,CAASC,IAAI,iBACZ;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACN,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,UAASM,IAAI,CAACN,EAAG,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,IAAI,CAACC,IADR,CADF,eAIE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAMR,gBAAgB,CAACO,IAAI,CAACN,EAAN,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,CADD,CADH,CADF;AAcD,CApCD;;AAsCA,eAAeH,IAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { mutate as mutateGlobal } from 'swr';\nimport { useFetch } from '~/hooks/useFetch';\nimport api from '~/services/api';\n\ninterface User {\n  id: number;\n  name: string;\n}\n\nconst List: React.FC = () => {\n  const { data, mutate } = useFetch<User[]>('users');\n\n  const handleNameChange = useCallback((id: number) => {\n    api.put(`users/${id}`, fetcher, { refreshWhenHidden: 10 });\n\n    const updatedUsers = data?.map(user => {\n      if (user.id === id) {\n        return { ...user, name: 'Bartolomeu' }\n      }\n\n      return user;\n    })\n\n    mutate(updatedUsers, false)\n    mutateGlobal(`users/${id}`, { id, name: 'Bartolomeu' })\n  }, [data, mutate]);\n\n  if (!data) {\n    return <p>Carregando...</p>\n  }\n\n  return (\n    <ul>\n      {data.map(user => (\n        <li key={user.id}>\n          <Link to={`/users/${user.id}`}>\n            {user.name}\n          </Link>\n          <button type=\"button\" onClick={() => handleNameChange(user.id)}>\n            Alterar nome\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default List;"]},"metadata":{},"sourceType":"module"}