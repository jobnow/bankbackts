{"ast":null,"code":"export default function getValidationErrors(err) {\n  const validationErrors = {};\n  err.inner.forEach(error => {\n    validationErrors[error.path] = error.message;\n  });\n  return validationErrors;\n}","map":{"version":3,"sources":["/home/ricardo/bankpague/go-barber-web-ts/src/utils/getValidationErrors.ts"],"names":["getValidationErrors","err","validationErrors","inner","forEach","error","path","message"],"mappings":"AAMA,eAAe,SAASA,mBAAT,CAA6BC,GAA7B,EAA4D;AACzE,QAAMC,gBAAyB,GAAG,EAAlC;AAEAD,EAAAA,GAAG,CAACE,KAAJ,CAAUC,OAAV,CAAkBC,KAAK,IAAI;AACzBH,IAAAA,gBAAgB,CAACG,KAAK,CAACC,IAAP,CAAhB,GAA+BD,KAAK,CAACE,OAArC;AACD,GAFD;AAIA,SAAOL,gBAAP;AACD","sourcesContent":["import { ValidationError } from 'yup';\n\ninterface IErrors {\n  [key: string]: string;\n}\n\nexport default function getValidationErrors(err: ValidationError): IErrors {\n  const validationErrors: IErrors = {};\n\n  err.inner.forEach(error => {\n    validationErrors[error.path] = error.message;\n  });\n\n  return validationErrors;\n}\n"]},"metadata":{},"sourceType":"module"}