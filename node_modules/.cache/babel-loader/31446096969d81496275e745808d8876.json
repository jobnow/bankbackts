{"ast":null,"code":"var _jsxFileName = \"/home/ricardo/bankpague/go-barber-web-ts/src/pages/ForgotPassword/index.tsx\";\nimport React, { useRef, useCallback, useState } from 'react';\nimport { FiLogIn, FiMail } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport { Link } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport getValidationErrors from \"../../utils/getValidationErrors\";\nimport api from \"../../services/api\";\nimport { useToast } from \"../../hooks/ToastContext\";\nimport Input from \"../../components/Input\";\nimport Button from \"../../components/Button\";\nimport logoImg from \"../../assets/logo.svg\";\nimport { Container, Content, AnimationContainer, Background } from './styles';\n\nconst ForgotPassword = () => {\n  const [loading, setLoading] = useState(false);\n  const formRef = useRef(null);\n  const {\n    addToast\n  } = useToast();\n  const handleSubmit = useCallback(async data => {\n    try {\n      var _formRef$current;\n\n      setLoading(true);\n      (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setErrors({});\n      const schema = Yup.object().shape({\n        email: Yup.string().required('E-mail obrigatório').email('Digite um e-mail válido')\n      });\n      await schema.validate(data, {\n        abortEarly: false\n      });\n      await api.post('/password/forgot', {\n        email: data.email\n      });\n      addToast({\n        type: 'success',\n        title: 'E-mail de recupereção enviado',\n        description: 'Enviamos um e-mail para sua caixa de entrada com as instruções para recuperar a sua senha'\n      });\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        var _formRef$current2;\n\n        const errors = getValidationErrors(err);\n        (_formRef$current2 = formRef.current) === null || _formRef$current2 === void 0 ? void 0 : _formRef$current2.setErrors(errors);\n        return;\n      }\n\n      addToast({\n        type: 'error',\n        title: 'Erro na recuperação de senha',\n        description: 'Ocorreu um erro ao tentar realizar a recuperação de senha, tente novamente.'\n      });\n    } finally {\n      setLoading(false);\n    }\n  }, [addToast]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AnimationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    alt: \"Go Barber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    ref: formRef,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Recuperar Senha\"), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"E-mail\",\n    icon: FiMail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Recuperar\")), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FiLogIn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }), \"Voltar ao Login\"))), /*#__PURE__*/React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ForgotPassword;","map":{"version":3,"sources":["/home/ricardo/bankpague/go-barber-web-ts/src/pages/ForgotPassword/index.tsx"],"names":["React","useRef","useCallback","useState","FiLogIn","FiMail","Form","Link","Yup","getValidationErrors","api","useToast","Input","Button","Container","Content","AnimationContainer","Background","ForgotPassword","loading","setLoading","formRef","addToast","handleSubmit","data","current","setErrors","schema","object","shape","email","string","required","validate","abortEarly","post","type","title","description","err","ValidationError","errors","logoImg"],"mappings":"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","sourcesContent":["import React, { useRef, useCallback, useState } from 'react';\nimport { FiLogIn, FiMail } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport { Link } from 'react-router-dom';\n\nimport * as Yup from 'yup';\nimport getValidationErrors from '~/utils/getValidationErrors';\n\nimport api from '~/services/api';\n\nimport { useToast } from '~/hooks/ToastContext';\n\nimport IForgotPasswordFormData from './interfaces/IForgotPasswordFormData';\n\nimport Input from '~/components/Input';\nimport Button from '~/components/Button';\n\nimport logoImg from '~/assets/logo.svg';\n\nimport { Container, Content, AnimationContainer, Background } from './styles';\n\nconst ForgotPassword: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const formRef = useRef<FormHandles>(null);\n\n  const { addToast } = useToast();\n\n  const handleSubmit = useCallback(\n    async (data: IForgotPasswordFormData) => {\n      try {\n        setLoading(true);\n\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          email: Yup.string()\n            .required('E-mail obrigatório')\n            .email('Digite um e-mail válido'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        await api.post('/password/forgot', {\n          email: data.email,\n        });\n\n        addToast({\n          type: 'success',\n          title: 'E-mail de recupereção enviado',\n          description:\n            'Enviamos um e-mail para sua caixa de entrada com as instruções para recuperar a sua senha',\n        });\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          formRef.current?.setErrors(errors);\n\n          return;\n        }\n\n        addToast({\n          type: 'error',\n          title: 'Erro na recuperação de senha',\n          description:\n            'Ocorreu um erro ao tentar realizar a recuperação de senha, tente novamente.',\n        });\n      } finally {\n        setLoading(false);\n      }\n    },\n    [addToast],\n  );\n\n  return (\n    <Container>\n      <Content>\n        <AnimationContainer>\n          <img src={logoImg} alt=\"Go Barber\" />\n\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <h1>Recuperar Senha</h1>\n\n            <Input\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"E-mail\"\n              icon={FiMail}\n            />\n\n            <Button type=\"submit\" loading={loading}>\n              Recuperar\n            </Button>\n          </Form>\n\n          <Link to=\"/\">\n            <FiLogIn />\n            Voltar ao Login\n          </Link>\n        </AnimationContainer>\n      </Content>\n      <Background />\n    </Container>\n  );\n};\n\nexport default ForgotPassword;\n"]},"metadata":{},"sourceType":"module"}